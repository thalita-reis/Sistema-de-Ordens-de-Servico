const express = require('express');
const router = express.Router();
const orcamentoController = require('../controllers/orcamentoController');

// ============================================
// ROTAS DE OR√áAMENTOS - VERS√ÉO PERFEITA
// ============================================

// ============================================
// üß™ ROTAS DE TESTE E INFORMA√á√ïES (PRIMEIRO)
// ============================================

// GET /api/orcamentos/teste - Teste de conex√£o
router.get('/teste', orcamentoController.teste);
router.get('/test', orcamentoController.teste); // Alias para compatibilidade

// GET /api/orcamentos/estatisticas - Estat√≠sticas de or√ßamentos
router.get('/estatisticas', orcamentoController.obterEstatisticas);

// ============================================
// üîç ROTAS DE BUSCA ESPEC√çFICAS (ANTES DAS GEN√âRICAS)
// ============================================

// GET /api/orcamentos/page - Listar com pagina√ß√£o (usado pelo frontend)
router.get('/page', orcamentoController.listarComPaginacao);

// ‚ùå ROTAS REMOVIDAS (m√©todos n√£o existem no controller):
// router.get('/cliente/:cpf', orcamentoController.buscarPorCliente);
// router.get('/status/:status', orcamentoController.buscarPorStatus);

// ============================================
// üìã ROTAS PRINCIPAIS DE OR√áAMENTOS
// ============================================

// GET /api/orcamentos - Listar todos os or√ßamentos
router.get('/', orcamentoController.listarTodos);

// GET /api/orcamentos/:id - Buscar or√ßamento por ID
router.get('/:id', orcamentoController.buscarPorId);

// POST /api/orcamentos - Criar novo or√ßamento
router.post('/', orcamentoController.criar);

// PUT /api/orcamentos/:id - Atualizar or√ßamento
router.put('/:id', orcamentoController.atualizar);

// ============================================
// üîß ROTAS DE ATUALIZA√á√ÉO ESPEC√çFICA (FUTURAS)
// ============================================

// ‚ùå ROTA REMOVIDA (m√©todo n√£o existe no controller):
// router.patch('/:id/status', orcamentoController.alterarStatus);

// üí° NOTA: Para alterar status, use PUT /api/orcamentos/:id com { status: "novo_status" }

// ============================================
// üóëÔ∏è ROTA DE EXCLUS√ÉO
// ============================================

// DELETE /api/orcamentos/:id - Deletar or√ßamento
router.delete('/:id', orcamentoController.deletar);

// ============================================
// üìù DOCUMENTA√á√ÉO DAS ROTAS FUNCIONAIS
// ============================================

/*
ROTAS DE OR√áAMENTOS - SISTEMA CPF √öNICO:

‚úÖ ROTAS FUNCIONAIS:
GET /api/orcamentos/teste                      - Testar conex√£o
GET /api/orcamentos/estatisticas               - Estat√≠sticas de or√ßamentos
GET /api/orcamentos/page                       - Listar com pagina√ß√£o
GET /api/orcamentos                            - Listar todos
GET /api/orcamentos/:id                        - Buscar por ID
POST /api/orcamentos                           - Criar or√ßamento
PUT /api/orcamentos/:id                        - Atualizar or√ßamento
DELETE /api/orcamentos/:id                     - Deletar or√ßamento

‚ùå ROTAS REMOVIDAS (m√©todos n√£o implementados):
- GET /api/orcamentos/cliente/:cpf             - buscarPorCliente (n√£o existe)
- PATCH /api/orcamentos/:id/status             - alterarStatus (n√£o existe)
- GET /api/orcamentos/status/:status           - buscarPorStatus (n√£o existe)

üí° ALTERNATIVAS FUNCIONAIS:
- Para buscar por cliente: Use GET /api/orcamentos/page?search=[nome_cliente]
- Para alterar status: Use PUT /api/orcamentos/:id com { status: "aprovado" }
- Para buscar por status: Use GET /api/orcamentos/page?status=[status]

üìä ESTRUTURA DE CRIA√á√ÉO:
POST /api/orcamentos
{
  "cliente_id": 1,                    // ‚úÖ OBRIGAT√ìRIO
  "data_criacao": "2025-06-02",     // Opcional (padr√£o: hoje)
  "data_validade": "2025-07-02",      // Opcional
  "valor_total": 1500.00,             // Opcional (padr√£o: 0)
  "desconto": 10.00,                  // Opcional (padr√£o: 0)
  "valor_final": 1350.00,             // Opcional (padr√£o: 0)
  "status": "pendente",               // Opcional (padr√£o: "rascunho")
  "observacoes": "Or√ßamento para..."  // Opcional
}

üìä ESTRUTURA DE ATUALIZA√á√ÉO:
PUT /api/orcamentos/:id
{
  "numero": "000123",                 // Opcional
  "cliente_id": 2,                    // Opcional
  "status": "aprovado",               // Opcional
  "valor_final": 1200.00,             // Opcional
  // ... outros campos opcionais
}

üéØ STATUS DISPON√çVEIS:
- "rascunho": Or√ßamento em elabora√ß√£o
- "pendente": Aguardando aprova√ß√£o
- "aprovado": Cliente aprovou
- "rejeitado": Cliente rejeitou

üìã PAGINA√á√ÉO (GET /page):
?page=1&limit=10&search=termo

üìä RESPOSTA DE PAGINA√á√ÉO:
{
  "data": [...],
  "pagination": {
    "page": 1,
    "limit": 10,
    "total": 50,
    "totalPages": 5,
    "hasNext": true,
    "hasPrev": false
  }
}

‚úÖ TODAS AS ROTAS TESTADAS E FUNCIONAIS
*/

module.exports = router;
