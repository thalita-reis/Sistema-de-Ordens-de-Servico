const express = require('express');
const router = express.Router();
const { pool } = require('../config/database');

// ============================================
// üìã GET - LISTAR TODOS OS CLIENTES
// ============================================
router.get('/', async (req, res) => {
  try {
    console.log('üîç Buscando clientes...');
    
    const query = `
      SELECT 
        id,
        nome,
        cpf,
        email,
        telefone,
        celular,
        rua,
        numero,
        complemento,
        bairro,
        cidade,
        uf,
        cep,
        pessoa_juridica,
        observacoes_gerais,
        ficha_inativa,
        ativo,
        data_inclusao,
        created_at,
        updated_at,
        empresa_id
      FROM clientes 
      WHERE ativo = true
      ORDER BY nome ASC
    `;
    
    const result = await pool.query(query);
    
    console.log('‚úÖ Clientes encontrados:', result.rows.length);
    
    res.json({
      success: true,
      clientes: result.rows,
      total: result.rows.length
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao carregar clientes:', error.message);
    res.status(500).json({ 
      erro: 'Erro ao carregar clientes',
      mensagem: error.message,
      success: false
    });
  }
});

// ============================================
// üë§ GET - BUSCAR CLIENTE POR ID
// ============================================
router.get('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    console.log('üîç Buscando cliente ID:', id);
    
    const query = `
      SELECT 
        id,
        nome,
        cpf,
        email,
        telefone,
        celular,
        rua,
        numero,
        complemento,
        bairro,
        cidade,
        uf,
        cep,
        pessoa_juridica,
        observacoes_gerais,
        ficha_inativa,
        ativo,
        data_inclusao,
        created_at,
        updated_at,
        empresa_id
      FROM clientes 
      WHERE id = $1
    `;
    
    const result = await pool.query(query, [id]);
    
    if (result.rows.length === 0) {
      return res.status(404).json({
        erro: 'Cliente n√£o encontrado',
        success: false
      });
    }
    
    console.log('‚úÖ Cliente encontrado:', result.rows[0].nome);
    
    res.json({
      success: true,
      cliente: result.rows[0]
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao buscar cliente:', error.message);
    res.status(500).json({ 
      erro: 'Erro ao buscar cliente',
      mensagem: error.message,
      success: false
    });
  }
});

// ============================================
// ‚ûï POST - CRIAR NOVO CLIENTE
// ============================================
router.post('/', async (req, res) => {
  try {
    console.log('‚ûï Criando novo cliente...');
    const dadosCliente = req.body;
    
    const query = `
      INSERT INTO clientes (
        nome, cpf, email, telefone, celular,
        rua, numero, complemento, bairro, cidade, uf, cep,
        pessoa_juridica, observacoes_gerais,
        data_inclusao, created_at, updated_at,
        empresa_id, ativo
      ) VALUES (
        $1, $2, $3, $4, $5,
        $6, $7, $8, $9, $10, $11, $12,
        $13, $14,
        NOW(), NOW(), NOW(),
        $15, true
      ) RETURNING *
    `;
    
    const valores = [
      dadosCliente.nome,
      dadosCliente.cpf || null,
      dadosCliente.email || null,
      dadosCliente.telefone || null,
      dadosCliente.celular || null,
      dadosCliente.rua || null,
      dadosCliente.numero || null,
      dadosCliente.complemento || null,
      dadosCliente.bairro || null,
      dadosCliente.cidade || null,
      dadosCliente.uf || null,
      dadosCliente.cep || null,
      dadosCliente.pessoa_juridica || false,
      dadosCliente.observacoes_gerais || null,
      dadosCliente.empresa_id || 1
    ];
    
    const result = await pool.query(query, valores);
    
    console.log('‚úÖ Cliente criado:', result.rows[0].nome);
    
    res.status(201).json({
      success: true,
      cliente: result.rows[0],
      mensagem: 'Cliente cadastrado com sucesso'
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao criar cliente:', error.message);
    res.status(500).json({ 
      erro: 'Erro ao cadastrar cliente',
      mensagem: error.message,
      success: false
    });
  }
});

// ============================================
// üîÑ PUT - ATUALIZAR CLIENTE
// ============================================
router.put('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const dadosCliente = req.body;
    
    console.log('üîÑ Atualizando cliente ID:', id);
    
    const query = `
      UPDATE clientes SET
        nome = $1,
        cpf = $2,
        email = $3,
        telefone = $4,
        celular = $5,
        rua = $6,
        numero = $7,
        complemento = $8,
        bairro = $9,
        cidade = $10,
        uf = $11,
        cep = $12,
        pessoa_juridica = $13,
        observacoes_gerais = $14,
        updated_at = NOW()
      WHERE id = $15
      RETURNING *
    `;
    
    const valores = [
      dadosCliente.nome,
      dadosCliente.cpf || null,
      dadosCliente.email || null,
      dadosCliente.telefone || null,
      dadosCliente.celular || null,
      dadosCliente.rua || null,
      dadosCliente.numero || null,
      dadosCliente.complemento || null,
      dadosCliente.bairro || null,
      dadosCliente.cidade || null,
      dadosCliente.uf || null,
      dadosCliente.cep || null,
      dadosCliente.pessoa_juridica || false,
      dadosCliente.observacoes_gerais || null,
      id
    ];
    
    const result = await pool.query(query, valores);
    
    if (result.rows.length === 0) {
      return res.status(404).json({
        erro: 'Cliente n√£o encontrado',
        success: false
      });
    }
    
    console.log('‚úÖ Cliente atualizado:', result.rows[0].nome);
    
    res.json({
      success: true,
      cliente: result.rows[0],
      mensagem: 'Cliente atualizado com sucesso'
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao atualizar cliente:', error.message);
    res.status(500).json({ 
      erro: 'Erro ao atualizar cliente',
      mensagem: error.message,
      success: false
    });
  }
});

// ============================================
// üóëÔ∏è DELETE - INATIVAR CLIENTE (soft delete)
// ============================================
router.delete('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    console.log('üóëÔ∏è Inativando cliente ID:', id);
    
    const query = `
      UPDATE clientes 
      SET ativo = false, updated_at = NOW()
      WHERE id = $1
      RETURNING nome
    `;
    
    const result = await pool.query(query, [id]);
    
    if (result.rows.length === 0) {
      return res.status(404).json({
        erro: 'Cliente n√£o encontrado',
        success: false
      });
    }
    
    console.log('‚úÖ Cliente inativado:', result.rows[0].nome);
    
    res.json({
      success: true,
      mensagem: `Cliente ${result.rows[0].nome} inativado com sucesso`
    });
    
  } catch (error) {
    console.error('‚ùå Erro ao inativar cliente:', error.message);
    res.status(500).json({ 
      erro: 'Erro ao inativar cliente',
      mensagem: error.message,
      success: false
    });
  }
});

module.exports = router;